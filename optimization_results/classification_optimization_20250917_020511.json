{
  "best_candidate": {
    "instructions": "Task: Classify the overall sentiment of the input text.\n\nLabels: {positive, negative, neutral}\n\nOutput format: Return only a JSON object of the form {\"category\":\"positive|negative|neutral\"} with no extra keys or commentary.\n\nLabeling guidelines:\n- Positive: clear approval, satisfaction, praise, or mild positive reactions to novelty. For brief evaluative utterances about novelty (e.g., \"That's different\", \"That's new\", \"That's interesting\") with no hedges or negative cues, default to positive (low intensity).\n- Negative: complaints, dissatisfaction, frustration, or problems/defects. Treat common sarcasm templates as negative by default unless explicit positive context is present (e.g., \"Great, just what I needed\", \"Perfect\", \"Wonderful\"). For mixed statements (pros and cons), choose the dominant valence; if balanced, prefer negative when a flaw/problem is stated (e.g., \"Great price, mediocre quality\" \u2192 negative).\n- Neutral: descriptive or factual content without clear evaluative language or affect.\n\nDisambiguation cues:\n- Negative/hedging cues: ellipses or hesitation (\"...\", \"uh\", \"hmm\"), qualifiers like \"in a bad way\", or doubtful framing (e.g., \"That's... different\") \u2192 lean negative/neutral.\n- Positive cues: exclamation marks or co-occurring praise terms (e.g., \"nice\", \"cool\", \"love it\") \u2192 lean positive.\n\nGeneral heuristics:\n- Handle negation and understatement (e.g., \"not bad\" \u2192 positive; \"could be worse\" \u2192 negative/weak negative).\n- When context is absent, apply common pragmatic usage patterns per the above defaults.",
    "signature:ClassificationInput:instructions": "Classify the text into a category",
    "signature:ClassificationInput:text:desc": "The text to classify"
  },
  "best_score": 0.790625,
  "original_candidate": {
    "instructions": "Classify text sentiment.",
    "signature:ClassificationInput:instructions": "Classify the text into a category",
    "signature:ClassificationInput:text:desc": "The text to classify"
  },
  "original_score": 0.675,
  "num_iterations": 11,
  "num_metric_calls": 254
}